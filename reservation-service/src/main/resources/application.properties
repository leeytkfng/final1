spring.application.name=reservation-service

server.port=8083

#spring.datasource.url=jdbc:postgresql://localhost:5432/reservation
#spring.datasource.username=postgres
#spring.datasource.password=1234
#spring.datasource.driver-class-name=org.postgresql.Driver


spring.datasource.url=jdbc:postgresql://localhost:5432/test1
spring.datasource.username=lee1
spring.datasource.password=1234
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

eureka.client.service-url.defalutZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

spring.kafka.bootstrap-servers=localhost:9092

spring.jackson.serialization.write-dates-as-timestamps=true

## Producer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer
spring.kafka.consumer.group-id=reservation-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

